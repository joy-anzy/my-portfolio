Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table =  10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table =  10000 
v. elite_years table = 10000 
vi. friend table = 10000 
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000 
x. tip table = 10000 
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business =  10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000 (business_id, user_id)
vi. Checkin = 493 
vii. Photo = 10000
viii. Tip = 537 (user_id, business_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO
	
	
	SQL code used to arrive at answer:
	
	SELECT column,
	COUNT(*)
	FROM user
	WHERE column IS NULL

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max:  5 		avg:  3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:  1.0 		max:  5.0 		avg:  3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:  0 	max:  2 		avg:  0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1 	max:   53	avg:   1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	 2000 	avg:  24.2995 
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	SELECT 
city,
SUM(review_count) AS Reviews
FROM business
GROUP BY city
ORDER BY Reviews DESC;

	
	Copy and Paste the Result Below:
	+-----------------+---------+
| city            | Reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)

6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT 
stars AS star_rating,
COUNT(*) AS rating_count
FROM business
WHERE city = 'Avon'
GROUP BY star_rating;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+--------------+
| star_rating | rating_count |
+-------------+--------------+
|         1.5 |            1 |
|         2.5 |            2 |
|         3.5 |            3 |
|         4.0 |            2 |
|         4.5 |            1 |
|         5.0 |            1 |
+-------------+--------------+

ii. Beachwood

SQL code used to arrive at answer:
SELECT 
stars AS star_rating,
COUNT(*) AS rating_count
FROM business
WHERE city = 'Beachwood'
GROUP BY star_rating;



Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------------+--------------+
| star_rating | rating_count |
+-------------+--------------+
|         2.0 |            1 |
|         2.5 |            1 |
|         3.0 |            2 |
|         3.5 |            2 |
|         4.0 |            1 |
|         4.5 |            2 |
|         5.0 |            5 |
+-------------+--------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
SELECT 
name,
review_count
FROM user
ORDER BY review_count DESC
LIMIT 3;

		
	Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+	


8. Does posing more reviews correlate with more fans?
Yes, more reviews attract more fans
	Please explain your findings and interpretation of the results:
+--------------+--------------+-----------------+
| num_of_users | review_given | avg_num_of_fans |
+--------------+--------------+-----------------+
|         9492 | A.0-100      |  0.436788874842 |
|          270 | B.101-200    |   8.93333333333 |
|          107 | C.201-300    |    18.523364486 |
|           57 | D.301-400    |   25.2105263158 |
|           26 | E.401-500    |   31.7692307692 |
|           13 | F.501-600    |   32.8461538462 |
|           14 | G.601-700    |            76.0 |
|            3 | H.701-800    |            58.0 |
|            7 | I.801-900    |   97.5714285714 |
|            3 | J.901-1000   |           236.0 |
|            1 | K.1001-1100  |           104.0 |
|            2 | L.1101-1200  |           163.5 |
|            2 | M.1201-1300  |           113.5 |
|            1 | N.1301-1400  |            76.0 |
|            1 | Q.1601-1700  |            50.0 |
|            1 | T.1901-2000  |           253.0 |
+--------------+--------------+-----------------+
The analysis in the table above shows that, there is a steady increase in the number of fans from 600 reviews and below. 
You can also observe that there is rapid increase in the number of rewarded fans though not steady, this is as a result of fewer users that reach this level.
The analysis also review that 94.92% of 1000 users gave 100 reviews and below. The focus should be to boost the review of users

	SQL code that generate the result
	SELECT 
COUNT(id) AS num_of_users,
 CASE
    WHEN review_count BETWEEN 0 AND 100 THEN 'A.0-100'
    WHEN review_count BETWEEN 101 AND 200 THEN 'B.101-200'
    WHEN review_count BETWEEN 201 AND 300 THEN 'C.201-300'
    WHEN review_count BETWEEN 301 AND 400 THEN 'D.301-400'
    WHEN review_count BETWEEN 401 AND 500 THEN 'E.401-500'
    WHEN review_count BETWEEN 501 AND 600 THEN 'F.501-600'
    WHEN review_count BETWEEN 601 AND 700 THEN 'G.601-700'
    WHEN review_count BETWEEN 701 AND 800 THEN 'H.701-800'
    WHEN review_count BETWEEN 801 AND 900 THEN 'I.801-900'
    WHEN review_count BETWEEN 901 AND 1000 THEN 'J.901-1000'
    WHEN review_count BETWEEN 1001 AND 1100 THEN 'K.1001-1100'
    WHEN review_count BETWEEN 1101 AND 1200 THEN 'L.1101-1200'
    WHEN review_count BETWEEN 1201 AND 1300 THEN 'M.1201-1300'
    WHEN review_count BETWEEN 1301 AND 1400 THEN 'N.1301-1400'
    WHEN review_count BETWEEN 1401 AND 1500 THEN 'O.1401-1500'
    WHEN review_count BETWEEN 1501 AND 1600 THEN 'P.1501-1600'
    WHEN review_count BETWEEN 1601 AND 1700 THEN 'Q.1601-1700'
    WHEN review_count BETWEEN 1701 AND 1800 THEN 'R.1701-1800'
    WHEN review_count BETWEEN 1801 AND 1900 THEN 'S.1801-1900'
    WHEN review_count BETWEEN 1901 AND 2000 THEN 'T.1901-2000'
    END AS review_given,
    AVG(fans) AS avg_num_of_fans
FROM user
GROUP BY review_given
ORDER BY review_given ASC;


9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
Yes, there are  1780  reviews with the word love and  232 with the word hate
	SQL code used to arrive at answer:
----for the word love
SELECT 
COUNT(text) AS love_count
FROM review
WHERE text LIKE '%love%';
------for the word hate
SELECT 
COUNT(text) AS hate_count
FROM review
WHERE text LIKE '%hate%';

	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
SELECT 
name,
fans
FROM user
ORDER BY fans DESC
LIMIT 10;


Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	City chosen = 'Toronto'
	Category chosen = 'Restaurants'
i. Do the two groups you chose to analyze have a different distribution of hours?
Yes, based on the analysis of the result, the high rating restaurants open later than low rating Restaurants during the day and close almost the same time.
The result is shown in the table below

High rating output
+---------------------+-----------------------+-------------+
| Toronto_restaurants | hours                 | Ratings     |
+---------------------+-----------------------+-------------+
| Cabin Fever         | Monday|16:00-2:00     | High Rating |
| Cabin Fever         | Tuesday|18:00-2:00    | High Rating |
| Cabin Fever         | Friday|18:00-2:00     | High Rating |
| Cabin Fever         | Wednesday|18:00-2:00  | High Rating |
| Cabin Fever         | Thursday|18:00-2:00   | High Rating |
| Cabin Fever         | Sunday|16:00-2:00     | High Rating |
| Cabin Fever         | Saturday|16:00-2:00   | High Rating |
| Sushi Osaka         | Monday|11:00-23:00    | High Rating |
| Sushi Osaka         | Tuesday|11:00-23:00   | High Rating |
| Sushi Osaka         | Friday|11:00-23:00    | High Rating |
| Sushi Osaka         | Wednesday|11:00-23:00 | High Rating |
| Sushi Osaka         | Thursday|11:00-23:00  | High Rating |
| Sushi Osaka         | Sunday|14:00-23:00    | High Rating |
| Sushi Osaka         | Saturday|11:00-23:00  | High Rating |
| Edulis              | Sunday|12:00-16:00    | High Rating |
| Edulis              | Friday|18:00-23:00    | High Rating |
| Edulis              | Wednesday|18:00-23:00 | High Rating |
| Edulis              | Thursday|18:00-23:00  | High Rating |
| Edulis              | Saturday|18:00-23:00  | High Rating |
+---------------------+-----------------------+-------------+

Low rating output
+---------------------+-----------------------+------------+
| Toronto_restaurants | hours                 | Ratings    |
+---------------------+-----------------------+------------+
| Big Smoke Burger    | Monday|10:30-21:00    | LOW Rating |
| Big Smoke Burger    | Tuesday|10:30-21:00   | LOW Rating |
| Big Smoke Burger    | Friday|10:30-21:00    | LOW Rating |
| Big Smoke Burger    | Wednesday|10:30-21:00 | LOW Rating |
| Big Smoke Burger    | Thursday|10:30-21:00  | LOW Rating |
| Big Smoke Burger    | Sunday|11:00-19:00    | LOW Rating |
| Big Smoke Burger    | Saturday|10:30-21:00  | LOW Rating |
| 99 Cent Sushi       | Monday|11:00-23:00    | LOW Rating |
| 99 Cent Sushi       | Tuesday|11:00-23:00   | LOW Rating |
| 99 Cent Sushi       | Friday|11:00-23:00    | LOW Rating |
| 99 Cent Sushi       | Wednesday|11:00-23:00 | LOW Rating |
| 99 Cent Sushi       | Thursday|11:00-23:00  | LOW Rating |
| 99 Cent Sushi       | Sunday|11:00-23:00    | LOW Rating |
| 99 Cent Sushi       | Saturday|11:00-23:00  | LOW Rating |
| Pizzaiolo           | Monday|9:00-23:00     | LOW Rating |
| Pizzaiolo           | Tuesday|9:00-23:00    | LOW Rating |
| Pizzaiolo           | Friday|9:00-4:00      | LOW Rating |
| Pizzaiolo           | Wednesday|9:00-23:00  | LOW Rating |
| Pizzaiolo           | Thursday|9:00-23:00   | LOW Rating |
| Pizzaiolo           | Sunday|10:00-23:00    | LOW Rating |
| Pizzaiolo           | Saturday|10:00-4:00   | LOW Rating |
+---------------------+-----------------------+------------+


ii. Do the two groups you chose to analyze have a different number of reviews?
  Yes, the high rated restaurants have high average number of reviews compare to low rated as shown in the table below
+-------------+--------------------+
| Ratings     | Avg_num_of_reviews |
+-------------+--------------------+
| High Rating |               41.2 |
| LOW Rating  |      28.6666666667 |
+-------------+--------------------+    
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
No, there is limited information on the location being the neighborhood as a factor for high or low rating
SQL code used for analysis:
part 2 question 1i table 1
SELECT  
 b.name AS Toronto_restaurants,
 h.hours,
 ------categorizing based on stars
    CASE
        WHEN b.stars BETWEEN 2 AND 3 THEN 'LOW Rating'
        WHEN b.stars BETWEEN 4 AND 5 THEN 'High Rating'
    END AS Ratings
FROM business b
-------- Joinning business and category tables together
INNER JOIN 
    category c ON b.id = c.business_id
 ------- Joinning hours and business tables together
INNER JOIN 
    hours h ON  b.id = h.business_id
--------- condition for filtering
WHERE b.city = 'Toronto' 
AND c.category = 'Restaurants'
AND Ratings  IS NOT NULL
AND Ratings = 'High Rating';
		
part 2 qusetion 1i table 2
SELECT  
 b.name AS Toronto_restaurants,
 h.hours,
    CASE
        WHEN b.stars BETWEEN 2 AND 3 THEN 'LOW Rating'
        WHEN b.stars BETWEEN 4 AND 5 THEN 'High Rating'
    END AS Ratings
FROM business b 
INNER JOIN 
    category c ON b.id = c.business_id
INNER JOIN 
    hours h ON  b.id = h.business_id
WHERE b.city = 'Toronto' 
AND c.category = 'Restaurants'
AND Ratings  IS NOT NULL
AND Ratings = 'LOW Rating';
part 2 question 1ii
SELECT 
    CASE
        WHEN b.stars BETWEEN 2 AND 3 THEN 'LOW Rating'
        WHEN b.stars BETWEEN 4 AND 5 THEN 'High Rating'
    END AS Ratings,
   AVG(b.review_count) AS Avg_num_of_reviews
FROM business b 
INNER JOIN 
    category c ON b.id = c.business_id
WHERE b.city = 'Toronto' 
AND category = 'Restaurants'
AND Ratings  IS NOT NULL
GROUP BY Ratings;
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: There are more businesse that are open that businesses that are close as shown below
+---------+-----------------+
| is_open | num_of_Business |
+---------+-----------------+
|       0 |            1520 |
|       1 |            8480 |
+---------+-----------------+      
         
ii. Difference 2: there are more average reviews on open businesss than closed ones. as shown in table below
         
+---------+-----------------+-------------------+
| is_open | num_of_Business | AVG(review_count) |
+---------+-----------------+-------------------+
|       0 |            1520 |     23.1980263158 |
|       1 |            8480 |     31.7570754717 |
+---------+-----------------+-------------------+     
         
SQL code used for analysis:
for number of businesse
SELECT 
  is_open, 
  COUNT(name) AS num_of_Business
FROM business 
WHERE name IS NOT NULL
GROUP BY is_open; 

for Reviews
SELECT 
  is_open, 
  COUNT(name) AS num_of_Business,
  AVG(review_count)
FROM business 
WHERE name IS NOT NULL
GROUP BY is_open; 
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
Predicting business performance by star rating 
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
The overal rating of most businesses is based on the quality of performance. Having insufficient data on whether the rating is based on the business performance, 
however, the review_count column can show that businesses with good services tend to receive more reviews.The text column from the review table can show whether reviews with words "hate" and "love" are good predictors of overall rating. 
The stars column from the business table can verify or disconfirm the hypotheses.                        
iii. Output of your finished dataset:

Analysis Output
+----------------------------------------+---------+----------------+----------+
| name                                   | reviews | overall_rating | mind_set |
+----------------------------------------+---------+----------------+----------+
| 4E Kennels                             |      24 |            5.0 | loved    |
| Alfred Angelo Bridal                   |      58 |            4.0 | loved    |
| Angelo's Pizza                         |     377 |            4.0 | loved    |
| AquaKnox                               |     423 |            4.0 | loved    |
| Au 14 Ouest Prince Arthur              |       4 |            5.0 | loved    |
| Au Kouign-Amann                        |     291 |            4.5 | loved    |
| AutoNation Nissan Tempe                |     157 |            3.0 | loved    |
| Avis                                   |       6 |            2.5 | hated    |
| Babe's Cabaret                         |      16 |            3.0 | hated    |
| Balance Hormone Center                 |       9 |            4.0 | loved    |
| Beaver Choice                          |     326 |            4.0 | loved    |
| Benkovitz Seafoods                     |      20 |            4.5 | loved    |
| Boba Tea House                         |     295 |            4.0 | loved    |
| Bootleggers Modern American Smokehouse |     431 |            4.0 | hated    |
| Bootleggers Modern American Smokehouse |     431 |            4.0 | loved    |
| Braddah's Island Style                 |     566 |            4.0 | loved    |
| Budget Rent A Car                      |       7 |            2.0 | hated    |
| Cabo's Cantina and Grill               |      24 |            3.5 | loved    |
| Camp Bow Wow Avondale                  |      79 |            5.0 | loved    |
| Capriotti's Sandwich Shop              |      57 |            3.0 | loved    |
| Cho Sun Ok                             |     195 |            4.0 | loved    |
| D & D Discount Motorcycles             |      11 |            5.0 | loved    |
| Delmonico Steakhouse                   |    1389 |            4.0 | hated    |
| Diablo's Cantina                       |    1084 |            3.0 | loved    |
| Dreamy Draw Recreation Area            |      45 |            4.0 | loved    |
+----------------------------------------+---------+----------------+----------+
(Output limit exceeded, 25 of 140 total rows shown)
  
  The analysis output shows there is no corelation between the word 'hate' and 'love' with the overall rating, this makes it difficult to determine whether the overall ratings is based on the business performance     
         
iv. Provide the SQL code you used to create your final dataset:
SELECT 
    b.name, 
    b.review_count AS reviews,
    b.stars As overall_rating, 
    CASE 
        WHEN r.text LIKE '%hate%' THEN 'hated'
        WHEN r.text LIKE '%love%' THEN 'loved'
    END AS mind_set
FROM business b 
INNER JOIN review r ON b.id = r.business_id
WHERE mind_set IS NOT NULL
ORDER BY name;